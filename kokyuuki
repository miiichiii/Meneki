<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>ÂëºÂê∏Âô®„ÇØ„Ç§„Ç∫</title>
  <style>
    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
      line-height: 1.6;
      color: #333;
      background-color: #f5f5f7;
      padding: 20px;
      margin: 0;
    }
    .container {
      max-width: 800px;
      margin: 0 auto;
    }
    h1, h2 {
      font-size: 2.5em;
      margin-bottom: 30px;
      text-align: center;
      color: #1d1d1f;
    }
    .quiz-container, .result-card {
      background-color: #fff;
      border-radius: 18px;
      padding: 30px;
      box-shadow: 0 4px 6px rgba(0,0,0,0.1);
      margin-bottom: 20px;
    }
    .question {
      font-size: 1.3em;
      margin-bottom: 20px;
      color: #1d1d1f;
    }
    .options {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 15px;
    }
    .option {
      background-color: #f5f5f7;
      border: 2px solid #007aff;
      border-radius: 12px;
      padding: 15px;
      font-size: 1em;
      cursor: pointer;
      transition: all 0.3s ease;
      text-align: center;
      position: relative;
      overflow: hidden;
    }
    .option:hover {
      background-color: #e8e8ed;
    }
    .option.selected {
      background-color: #007aff;
      color: #fff;
    }
    .option.disabled {
      opacity: 0.5;
      cursor: default;
      pointer-events: none;
    }
    .option::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0,0,0,0.1);
      opacity: 0;
      transition: opacity 0.3s;
    }
    .option:active::after {
      opacity: 1;
    }
    @keyframes fadeOut {
      from { opacity: 1; transform: translateY(0); }
      to { opacity: 0; transform: translateY(-20px); }
    }
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }
    .fade-out {
      animation: fadeOut 0.5s ease-out forwards;
    }
    .fade-in {
      animation: fadeIn 0.5s ease-out forwards;
    }
    #quiz-content {
      transition: opacity 0.5s ease-out, transform 0.5s ease-out;
    }
    .explanation {
      margin-top: 20px;
      font-size: 1em;
      color: #333;
      display: none;
      background-color: #e8f5e9;
      border-left: 5px solid #4caf50;
      border-radius: 0 12px 12px 0;
      padding: 15px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
      animation: fadeIn 0.5s ease-out;
    }
    .explanation-header {
      display: flex;
      align-items: center;
      margin-bottom: 10px;
      font-weight: bold;
      color: #4caf50;
    }
    .explanation-icon {
      font-size: 1.5em;
      margin-right: 10px;
    }
    .nav-button {
      background-color: #007aff;
      color: #fff;
      border: none;
      border-radius: 12px;
      padding: 12px 24px;
      font-size: 1em;
      cursor: pointer;
      transition: background-color 0.3s ease;
      margin-top: 20px;
      width: 100%;
    }
    .nav-button:hover {
      background-color: #0056b3;
    }
    .result-card {
      margin-bottom: 20px;
    }
    .result-card h3 {
      font-size: 1.2em;
      margin-bottom: 10px;
    }
    .result-status {
      font-weight: bold;
      margin-bottom: 10px;
    }
    .correct {
      color: #34c759;
    }
    .incorrect {
      color: #ff3b30;
    }
    #attendance-link {
      background-color: #34c759;
      color: white;
      padding: 15px;
      border-radius: 12px;
      margin-top: 20px;
      text-align: center;
      display: none;
    }
    #attendance-link a {
      color: white;
      text-decoration: none;
      font-weight: bold;
    }
    #attendance-link a:hover {
      text-decoration: underline;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>ÂëºÂê∏Âô®„ÇØ„Ç§„Ç∫</h1>
    <div id="quiz-container" class="quiz-container">
      <div id="quiz-content">
        <div id="question" class="question"></div>
        <div id="options" class="options"></div>
        <div id="explanation" class="explanation"></div>
      </div>
      <button id="next" class="nav-button" onclick="nextQuestion()">Ê¨°„ÅÆÂïèÈ°å</button>
    </div>
    <div id="result-container"></div>
    <div id="attendance-link"></div>
  </div>

  <script>
    const quizData = [
      {
        question: "‰ΩìÂÜÖ„ÅßÊ†ÑÈ§äÁ¥†„Åå‰ª£Ë¨ù„Åï„Çå„ÇãÈöõ„Å´Áô∫Áîü„Åô„ÇãÊ∞¥„ÅØ‰Ωï„Å®Âëº„Å∞„Çå„Çã„Åã„ÄÇ",
        options: ["ÈñìË≥™Ê∞¥", "Á¥∞ËÉûÂÜÖÊ∂≤", "‰ª£Ë¨ùÊ∞¥", "Â∞øÁ¥∞ÁÆ°Ê∂≤"],
        answer: 2,
        explanation: "‰ª£Ë¨ùÊ∞¥„Å®„ÅØ„ÄÅÊ†ÑÈ§äÁ¥†„Åå‰ΩìÂÜÖ„Åß‰ª£Ë¨ù„Åï„Çå„ÇãÈÅéÁ®ã„ÅßÁîü„Åò„ÇãÊ∞¥„ÅÆ„Åì„Å®„Åß„Åô„ÄÇ"
      },
      {
        question: "‰∏çÊÑüËí∏Ê≥Ñ„Å´Âê´„Åæ„Çå„Çã„ÇÇ„ÅÆ„ÅØ„Å©„Çå„Åã„ÄÇ",
        options: ["Â∞ø„Å´„Çà„ÇãÊ∞¥ÂàÜ„ÅÆÂñ™Â§±", "Áô∫Ê±ó„Å´„Çà„ÇãÊ∞¥ÂàÜ„ÅÆÂñ™Â§±", "ÁöÆËÜö„Åã„Çâ„ÅÆÊ∞¥ÂàÜ„ÅÆËí∏Áô∫", "‰æø„Å´„Çà„ÇãÊ∞¥ÂàÜ„ÅÆÂñ™Â§±"],
        answer: 2,
        explanation: "‰∏çÊÑüËí∏Ê≥Ñ„Å®„ÅØ„ÄÅÂëºÂê∏„ÇÑÁöÆËÜö„Åã„ÇâÊÑèË≠ò„Åõ„Åö„Å´Â§±„Çè„Çå„ÇãÊ∞¥ÂàÜ„ÅÆ„Åì„Å®„ÇíÊåá„Åó„ÄÅÁöÆËÜö„Åã„Çâ„ÅÆÊ∞¥ÂàÜ„ÅÆËí∏Áô∫„ÅåÂê´„Åæ„Çå„Åæ„Åô„ÄÇ"
      },
      {
        question: "Áô∫Ê±ó„Å´„Çà„Å£„Å¶1Êó•„Å´5,000mL„ÅÆÊ∞¥ÂàÜ„ÅåÂ§±„Çè„Çå„ÅüÂ†¥Âêà„ÄÅ‰ΩìÊ∂≤„Éê„É©„É≥„Çπ„Çí‰øù„Å§„Åü„ÇÅ„Å´„ÅØ„ÄÅÂ∞ë„Å™„Åè„Å®„ÇÇ„Å©„Çå„Åè„Çâ„ÅÑ„ÅÆÊ∞¥ÂàÜÊëÇÂèñ„ÅåÂøÖË¶Å„Åã„ÄÇ",
        options: ["500mL", "1,500mL", "3,500mL", "5,500mL"],
        answer: 2,
        explanation: "Áô∫Ê±ó„Å™„Å©„Å´„Çà„ÇäÂ§ßÈáè„ÅÆÊ∞¥ÂàÜ„ÅåÂ§±„Çè„Çå„ÅüÂ†¥Âêà„ÅØ„ÄÅÂ§±„Çè„Çå„ÅüÈáè„Å®„Åª„ÅºÂêåÈáè„ÅÆÊ∞¥ÂàÜ„ÇíÊëÇÂèñ„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇÂ∞ë„Å™„Åè„Å®„ÇÇ3,500mL„ÅÆÊ∞¥ÂàÜÊëÇÂèñ„ÅåÂøÖË¶Å„Åß„Åô„ÄÇ"
      }
    ];

     let currentQuestion = 0;
    let score = 0;
    let userAnswers = [];
    let shuffledOptions = [];

    function shuffleArray(array) {
      for (let i = array.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [array[i], array[j]] = [array[j], array[i]];
      }
      return array;
    }

    function loadQuestion() {
      const quizContent = document.getElementById('quiz-content');
      quizContent.classList.add('fade-out');

      setTimeout(() => {
        const question = quizData[currentQuestion];
        document.getElementById('question').textContent = question.question;

        shuffledOptions = shuffleArray([...question.options]);
        const correctAnswerIndex = shuffledOptions.indexOf(question.options[question.answer]);

        const optionsHtml = shuffledOptions.map((option, index) => `
          <div class="option" onclick="selectOption(${index})">${option}</div>
        `).join('');

        document.getElementById('options').innerHTML = optionsHtml;
        document.getElementById('explanation').style.display = 'none';
        quizData[currentQuestion].shuffledAnswer = correctAnswerIndex;

        quizContent.classList.remove('fade-out');
        quizContent.classList.add('fade-in');

        setTimeout(() => {
          quizContent.classList.remove('fade-in');
        }, 500);
      }, 500);
    }

    function selectOption(index) {
      const options = document.querySelectorAll('.option');
      // „Åô„Åß„Å´ÈÅ∏ÊäûËÇ¢„ÅåÈÅ∏Êäû„Åï„Çå„Å¶„ÅÑ„ÇãÂ†¥Âêà„ÅØ‰Ωï„ÇÇ„Åó„Å™„ÅÑ
      if (options[index].classList.contains('disabled')) {
        return;
      }

      // ÂÖ®„Å¶„ÅÆÈÅ∏ÊäûËÇ¢„ÇíÁÑ°ÂäπÂåñ
      options.forEach(option => {
        option.classList.add('disabled');
      });

      // ÈÅ∏Êäû„Åï„Çå„ÅüÈÅ∏ÊäûËÇ¢„Å´selected„ÇØ„É©„Çπ„ÇíËøΩÂä†
      options[index].classList.add('selected');

      const question = quizData[currentQuestion];
      userAnswers[currentQuestion] = index;

      const explanationEl = document.getElementById('explanation');
      explanationEl.innerHTML = `
        <div class="explanation-header">
          <span class="explanation-icon">üí°</span>
          Ëß£Ë™¨
        </div>
        ${question.explanation}
      `;
      explanationEl.style.display = 'block';

      // Ê≠£Ëß£„ÅÆÂ†¥Âêà„ÄÅÊ≠£Ëß£„ÅÆÈÅ∏ÊäûËÇ¢„Å´correct„ÇØ„É©„Çπ„ÇíËøΩÂä†
      if (index === question.shuffledAnswer) {
        explanationEl.style.backgroundColor = '#e8f5e9';
        explanationEl.style.borderLeftColor = '#4caf50';
        options[index].classList.add('correct'); 
      } else {
        explanationEl.style.backgroundColor = '#ffebee';
        explanationEl.style.borderLeftColor = '#f44336';
      }
    }

    function nextQuestion() {
      // ÈÅ∏ÊäûËÇ¢„ÅåÈÅ∏Êäû„Åï„Çå„Å¶„ÅÑ„Çã„Åã„ÉÅ„Çß„ÉÉ„ÇØ
      const selectedOption = document.querySelector('.option.selected');
      if (selectedOption === null) {
        alert('ÈÅ∏ÊäûËÇ¢„ÇíÈÅ∏„Çì„Åß„Åè„Å†„Åï„ÅÑ');
        return; 
      }

      if (currentQuestion < quizData.length - 1) {
        currentQuestion++;
        loadQuestion();
      } else {
        showResult();
      }
    }

    function showResult() {
      score = quizData.reduce((total, question, index) => 
        total + (question.shuffledAnswer === userAnswers[index] ? 1 : 0), 0);

      const resultContainer = document.getElementById('result-container');
      const quizContainer = document.getElementById('quiz-container');
      quizContainer.style.display = 'none';

      const percentage = (score / quizData.length) * 100;
      let resultHtml = `
        <h2>„ÇØ„Ç§„Ç∫ÁµêÊûú</h2>
        <p>Ê≠£Ëß£Êï∞: ${score} / ${quizData.length}</p>
        <p>Ê≠£Á≠îÁéá: ${percentage.toFixed(2)}%</p>
      `;

      quizData.forEach((question, index) => {
        const userAnswerIndex = userAnswers[index];
        const isCorrect = question.shuffledAnswer === userAnswerIndex;
        resultHtml += `
          <div class="result-card">
            <h3>ÂïèÈ°å ${index + 1}</h3>
            <p class="result-status ${isCorrect ? 'correct' : 'incorrect'}">
              ${isCorrect ? 'Ê≠£Ëß£' : '‰∏çÊ≠£Ëß£'}
            </p>
            <p><strong>Ë≥™Âïè:</strong> ${question.question}</p>
            <p><strong>„ÅÇ„Å™„Åü„ÅÆÂõûÁ≠î:</strong> ${question.options[userAnswerIndex] || 'Êú™ÂõûÁ≠î'}</p>
            <p><strong>Ê≠£Ëß£:</strong> ${question.options[question.answer]}</p>
            <p><strong>Ë™¨Êòé:</strong> ${question.explanation}</p>
          </div>
        `;
      });

      resultHtml += `<button class="nav-button" onclick="restartQuiz()">„ÇÇ„ÅÜ‰∏ÄÂ∫¶ÊåëÊà¶„Åô„Çã</button>`;
      resultContainer.innerHTML = resultHtml;

      if (percentage >= 80) {
        const attendanceLink = document.getElementById('attendance-link');
        attendanceLink.style.display = 'block';
        attendanceLink.innerHTML = `
          <p>„Åä„ÇÅ„Åß„Å®„ÅÜ„Åî„Åñ„ÅÑ„Åæ„ÅôÔºÅ80%‰ª•‰∏ä„ÅÆÊ≠£Á≠îÁéá„Åß„Åô„ÄÇ</p>
          <a href="https://docs.google.com/forms/d/e/1FAIpQLSfjITf36Cfy64ty72Z-_cdVI1zdqKcWb52RrLL-7_uBKnGjMQ/viewform" target="_blank">Âá∫Â∏≠Á¢∫Ë™ç„Éï„Ç©„Éº„É†„Å´ÂõûÁ≠î„Åô„Çã</a>
        `;
      }
    }

    function restartQuiz() {
      currentQuestion = 0;
      score = 0;
      userAnswers = [];
      shuffledOptions = [];
      document.getElementById('quiz-container').style.display = 'block';
      document.getElementById('result-container').innerHTML = '';
      document.getElementById('attendance-link').style.display = 'none';
      loadQuestion();
    }

    loadQuestion();
  </script>
</body>
</html>
